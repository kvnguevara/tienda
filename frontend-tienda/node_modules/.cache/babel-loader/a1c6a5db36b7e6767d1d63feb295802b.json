{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kevin\\\\Desktop\\\\Tienda\\\\frontend-tienda\\\\src\\\\componentes\\\\CrearCuenta.jsx\";\nimport React, { useRef } from \"react\";\nimport \"./CrearCuenta.css\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { Redirect } from 'react-router-dom';\n/* datos */\n\nimport { baseURL, crearCuentaURL } from \"../datos\";\n\nconst CrearCuenta = props => {\n  const [nombre, setNombre] = useState(\"\");\n  const [apellido, setApellido] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmarPassword, setConfirmarPassword] = useState(\"\");\n  const [redirigir, setRedirigir] = useState(false);\n  const [deshabilitar, setDeshabilitar] = useState(false);\n  const [error, setError] = useState(false); // ya existe el usuario\n\n  const [errorPassword, setErrorPassword] = useState(false); // \n\n  const [validar, setValidar] = useState(false); // \n\n  function enviar() {\n    setValidar(true);\n\n    if (password !== confirmarPassword) {\n      setErrorPassword(true);\n      return;\n    } else setErrorPassword(false);\n\n    if (nombre.length === 0 || apellido.length === 0 || email.length === 0 || password.length === 0) return;\n    if (nombre.length === 0 || apellido.length === 0 || email.length === 0 || password.length === 0) return;\n    setDeshabilitar(true);\n    let url = baseURL + crearCuentaURL;\n    let formdata = new FormData();\n    formdata.append(\"nombre\", nombre);\n    formdata.append(\"apellido\", apellido);\n    formdata.append(\"email\", email);\n    formdata.append(\"password\", password);\n    axios.post(url, formdata).then(res => {\n      if (res.data == \"0\") {\n        console.log(\"Exito!\");\n        setRedirigir(true);\n        setDeshabilitar(false);\n        setValidar(false);\n        setError(false);\n      } else {\n        setDeshabilitar(false);\n        setError(true);\n      }\n    }).catch(err => {});\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, redirigir && /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/registro/confirmacion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"crear-cuenta-view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-crear-cuenta box-shadow-2 border-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"inicio-sesion-form__titulo form__titulo talign-center roboto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"Crear cuenta\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-crear-cuenta__nombre-apellido dflex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-crear-cuenta__campo-1 width100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"dblock form__label form-crear-cuenta__font-size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  }, \"Nombre\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"n-textfield width100\",\n    variant: \"outlined\",\n    type: \"text\",\n    value: nombre,\n    onChange: e => setNombre(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    className: validar && nombre.length === 0 ? \"validacion-error\" : \"invisible\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }, \"Indique su nombre.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-crear-cuenta__campo-2 width100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"dblock form__label form-crear-cuenta__font-size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }, \"Apellido\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"n-textfield width100\",\n    variant: \"outlined\",\n    type: \"text\",\n    value: apellido,\n    onChange: e => setApellido(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    className: validar && apellido.length === 0 ? \"validacion-error\" : \"invisible\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }, \"Indique su apellido.\"))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"width100 width100 form-crear-cuenta__campo-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    className: \"dblock form__label form-crear-cuenta__font-size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, \"E-mail\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"n-textfield width100\",\n    variant: \"outlined\",\n    type: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    className: error || validar && email.length === 0 ? \"validacion-error\" : \" invisible\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, error && \"Ya existe una cuenta con este email.\", !error && \"Escriba una direcci\\u00f3n de correo electronico v\\u00e1lida.\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dflex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"width100 form-crear-cuenta__campo-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"dblock form__label form-crear-cuenta__font-size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  }, \"Contrase\\u00f1a\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"n-textfield width100\",\n    variant: \"outlined\",\n    type: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    className: validar && password.length === 0 ? \"validacion-error\" : \"invisible\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  }, \"Debe indicar una contrase\\u00f1a.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"width100 form-crear-cuenta__campo-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"dblock form__label form-crear-cuenta__font-size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  }, \"Confirmar contrase\\u00f1a\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"n-textfield width100\",\n    variant: \"outlined\",\n    type: \"password\",\n    value: confirmarPassword,\n    onChange: e => setConfirmarPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    className: validar && errorPassword && password.length > 0 ? \"validacion-error\" : \"invisible\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 29\n    }\n  }, \"Las contrase\\u00f1as no coinciden.\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"talign-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"n-boton dflex justify-center\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: _ => {\n      if (deshabilitar) return;\n      enviar();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }, deshabilitar && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinner pointer-events-none dinline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 33\n    }\n  }), !deshabilitar && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"caption pointer-events-none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 33\n    }\n  }, \"Crear cuenta\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/registro\",\n    className: \"dblock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }, \"\\u00bfYa tiene una cuenta? Iniciar sesi\\u00f3n.\")))));\n};\n\nexport default CrearCuenta;","map":{"version":3,"sources":["C:/Users/kevin/Desktop/Tienda/frontend-tienda/src/componentes/CrearCuenta.jsx"],"names":["React","useRef","axios","useState","Redirect","baseURL","crearCuentaURL","CrearCuenta","props","nombre","setNombre","apellido","setApellido","email","setEmail","password","setPassword","confirmarPassword","setConfirmarPassword","redirigir","setRedirigir","deshabilitar","setDeshabilitar","error","setError","errorPassword","setErrorPassword","validar","setValidar","enviar","length","url","formdata","FormData","append","post","then","res","data","console","log","catch","err","e","target","value","_"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport \"./CrearCuenta.css\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { Redirect } from 'react-router-dom';\n\n/* datos */\nimport { baseURL, crearCuentaURL } from \"../datos\";\n\nconst CrearCuenta = (props) => {\n    const [nombre, setNombre] = useState(\"\");\n    const [apellido, setApellido] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmarPassword, setConfirmarPassword] = useState(\"\");\n    const [redirigir, setRedirigir] = useState(false);\n    const [deshabilitar, setDeshabilitar] = useState(false);\n    const [error, setError] = useState(false); // ya existe el usuario\n    const [errorPassword, setErrorPassword] = useState(false); // \n    const [validar, setValidar] = useState(false); // \n\n    function enviar() {\n        setValidar(true);\n        if(password !== confirmarPassword) {\n            setErrorPassword( true );\n            return;\n        }\n        else setErrorPassword( false );\n        if(nombre.length === 0 || apellido.length === 0 || email.length === 0 || password.length === 0) return;\n        if(nombre.length === 0 || apellido.length === 0 || email.length === 0 || password.length === 0) return;\n        setDeshabilitar(true);\n        let url = baseURL + crearCuentaURL;\n        let formdata = new FormData();\n        formdata.append(\"nombre\", nombre);\n        formdata.append(\"apellido\", apellido);\n        formdata.append(\"email\", email);\n        formdata.append(\"password\", password);\n\n        axios.post(url, formdata)\n        .then(res => {\n            if(res.data == \"0\") {\n                console.log(\"Exito!\");\n                setRedirigir(true);\n                setDeshabilitar(false);\n                setValidar(false);\n                setError(false);\n            }\n            else {\n                setDeshabilitar(false);\n                setError(true);\n            }\n        })\n        .catch(err => {});\n    }\n    \n    return(\n        <div>\n            {redirigir && <Redirect to=\"/registro/confirmacion\" />}\n            <div className=\"crear-cuenta-view\">\n                <div className=\"form-crear-cuenta box-shadow-2 border-box\">\n                    <h2 className=\"inicio-sesion-form__titulo form__titulo talign-center roboto\">Crear cuenta</h2>\n                    <div className=\"form-crear-cuenta__nombre-apellido dflex\">\n                        <div className=\"form-crear-cuenta__campo-1 width100\">\n                            <label className=\"dblock form__label form-crear-cuenta__font-size\">Nombre</label>\n                            <input\n                                className=\"n-textfield width100\"\n                                variant=\"outlined\"\n                                type=\"text\"\n                                value={nombre}\n                                onChange={(e) => setNombre(e.target.value)} />\n                            <small className={validar && nombre.length === 0 ? \"validacion-error\" : \"invisible\"}>Indique su nombre.</small>\n                        </div>\n                        <div className=\"form-crear-cuenta__campo-2 width100\">\n                            <label className=\"dblock form__label form-crear-cuenta__font-size\">Apellido</label>\n                            <input\n                                className=\"n-textfield width100\"\n                                variant=\"outlined\"\n                                type=\"text\"\n                                value={apellido}\n                                onChange={(e) => setApellido(e.target.value)} />\n                            <small className={validar && apellido.length === 0 ? \"validacion-error\" : \"invisible\"}>Indique su apellido.</small>\n                        </div>\n                    </div>\n                    <br/>\n                    <div className=\"width100 width100 form-crear-cuenta__campo-1\">\n                        <label htmlFor=\"email\" className=\"dblock form__label form-crear-cuenta__font-size\">E-mail</label>\n                        <input\n                            className=\"n-textfield width100\"\n                            variant=\"outlined\"\n                            type=\"email\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)} />\n                        <small className={error || (validar && email.length === 0) ? \"validacion-error\" : \" invisible\"}>\n                            {error && \"Ya existe una cuenta con este email.\"}\n                            {!error && \"Escriba una direcci\\u00f3n de correo electronico v\\u00e1lida.\"}\n                        </small>\n                    </div>\n                    <br/>\n                    <div className=\"dflex\">\n                        <div className=\"width100 form-crear-cuenta__campo-1\">\n                            <label className=\"dblock form__label form-crear-cuenta__font-size\">{\"Contrase\\u00f1a\"}</label>\n                            <input\n                                className=\"n-textfield width100\"\n                                variant=\"outlined\"\n                                type=\"password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)} />\n                            <small className={validar && password.length === 0 ? \"validacion-error\" : \"invisible\"}>{\"Debe indicar una contrase\\u00f1a.\"}</small>\n                        </div>\n\n                        <div className=\"width100 form-crear-cuenta__campo-2\">\n                            <label className=\"dblock form__label form-crear-cuenta__font-size\">{\"Confirmar contrase\\u00f1a\"}</label>\n                            <input\n                                className=\"n-textfield width100\"\n                                variant=\"outlined\"\n                                type=\"password\" \n                                value={confirmarPassword}\n                                onChange={(e) => setConfirmarPassword(e.target.value)} />\n                            <small className={validar && errorPassword && password.length > 0 ? \"validacion-error\" : \"invisible\"}>\n                                {\"Las contrase\\u00f1as no coinciden.\"}\n                            </small>\n                        </div>\n                    </div>\n\n                    <div className=\"talign-center\">\n                        <br/>\n                        <br/>\n                        <button\n                            className=\"n-boton dflex justify-center\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={ _ => {\n                                if(deshabilitar) return;\n                                enviar();\n                            }}>\n                            \n                            {deshabilitar && \n                                <div className=\"spinner pointer-events-none dinline\"></div>\n                            }\n                            {!deshabilitar && \n                                <span className=\"caption pointer-events-none\">\n                                    Crear cuenta\n                                </span>\n                            }\n                        </button>\n                        <br/>\n                        <br/>\n                        <a href=\"/registro\" className=\"dblock\" >{\"\\u00bfYa tiene una cuenta? Iniciar sesi\\u00f3n.\"}</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default CrearCuenta;"]},"metadata":{},"sourceType":"module"}